[project] # Project metadata
name = "rlottie-python"
description = "A ctypes API for rlottie, with additional functions for getting Pillow Image."
requires-python = ">=3.7"
readme = "README.md"
license = { "file" = "LICENSE" }
authors = [{ "name" = "chaudominic", "email" = "chaudominic2@gmail.com" }]
keywords = ["rlottie", "lottie", "tgs", "ctypes"]
classifiers = ["Topic :: Multimedia :: Graphics"]
dependencies = []
dynamic = ["version"]

[project.urls]
Repository = "https://github.com/laggykiller/rlottie-python"
Documentation = "https://rlottie-python.readthedocs.io/en/latest/"
Tracker = "https://github.com/laggykiller/rlottie-python/issues"

[project.optional-dependencies]
full = [
    "Pillow",
]

test = [
    "pytest"
]

lint = [
    "ruff",
    "mypy",
    "isort",
    "types-Pillow",
]

[build-system] # How pip and other frontends should build this project
requires = ["py-build-cmake>=0.4.3"]
build-backend = "py_build_cmake.build"

[tool.py-build-cmake.module] # Where to find the Python module to package
name = "rlottie_python"
directory = "src"

[tool.py-build-cmake.sdist] # What to include in source distributions
include = ["CMakeLists.txt", "rlottie/*"]

[tool.py-build-cmake.cmake] # How to build the CMake project
build_type = "Release"
source_path = "."
build_args = ["-j"]
options = {"LOTTIE_MODULE" = "OFF", "CMAKE_POLICY_VERSION_MINIMUM" = "3.5"}
install_components = ["python_module"]

[tool.py-build-cmake.linux.cmake] # Linux-specific options
config = "Release"
env = { "CMAKE_PREFIX_PATH" = "${HOME}/.local" }

[tool.py-build-cmake.mac.cmake] # macOS-specific options
config = "Release"

[tool.py-build-cmake.windows.cmake] # Windows-specific options
config = "Release"

[tool.py-build-cmake.wheel]
python_abi = 'abi3'
abi3_minimum_cpython_version = 37

[tool.pyright]
include = ["src", "tests", "example"]
strict = ["*"]

[tool.mypy]
python_version = "3.9"
files = ["src", "tests", "example"]